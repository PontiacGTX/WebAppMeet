@inherits CustomLayoutComponentBase
@inject IHttpContextAccessor _httpCtx
@code{


    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine("Main non First");
        if(firstRender)
        {
            Console.WriteLine("Main  First");
            try
            {
                _module = await JS.InvokeAsync<IJSObjectReference>(
                "import", "./js/InterOpLib.js");
            }
            catch (Exception)
            {

            }
            //var it =this._httpCtx.HttpContext.Response;
            AuthenticationState authenticationState;
            var token = await TryGetToken();
            await TrySaveJsToken(token);
            //var tokendata = TryGetTokenData();
            WebAppMeet.Data.Models.TokenResponse tokenObj = null;

            // if(!string.IsNullOrEmpty(token))
            //tokenObj =Newtonsoft.Json.JsonConvert.DeserializeObject<WebAppMeet.Data.Models.TokenResponse>(token);

            authenticationState = await _AuthenticationStateProv.GetAuthenticationStateAsync("jwt",token);
            string user = authenticationState?.User?.Identity?.Name;
            User = ( _userManager.Users.FirstOrDefault(x => x.Email == user));
        }
        else
        {
            if(User is null)
            {
                try
                {
                    _module = await JS.InvokeAsync<IJSObjectReference>(
                    "import", "./js/InterOpLib.js");
                }
                catch (Exception)
                {
                }
                //var it = this._httpCtx.HttpContext.Response;
                AuthenticationState authenticationState;
                var token = await TryGetToken();
                await TrySaveJsToken(token);
                //var tokendata = TryGetTokenData();
                WebAppMeet.Data.Models.TokenResponse tokenObj = null;

                // if(!string.IsNullOrEmpty(token))
                //tokenObj =Newtonsoft.Json.JsonConvert.DeserializeObject<WebAppMeet.Data.Models.TokenResponse>(token);

                authenticationState = await _AuthenticationStateProv.GetAuthenticationStateAsync("jwt", token);
                string user = authenticationState?.User?.Identity?.Name;
                User = (_userManager.Users.FirstOrDefault(x => x.Email == user));
            }
        }
    }
}
<PageTitle>WebAppMeet</PageTitle>
<div >
    
    <CascadingValue Value="User">
         <NavMenu />
   </CascadingValue>
</div>
<div class="page">
    

    <main>
        <CascadingValue Value="User">
            <article class="content px-4">
                @Body
            </article>
        </CascadingValue>
    </main>
</div>
